language: cpp
dist: xenial

after_script:
  - cat ~/VideoStreamerFCUP_Logs/client.txt
  - cat ~/VideoStreamerFCUP_Logs/portal.txt
#  - cat ~/VideoStreamerFCUP_Logs/serverAliBabaNORMAL.txt
  - cat ~/VideoStreamerFCUP_Logs/serverAliBabaHLS.txt
  - cat ~/VideoStreamerFCUP_Logs/serverPresidentNORMAL.txt
  - cat ~/VideoStreamerFCUP_Logs/serverPresidentDASH.txt
  - cat ~/VideoStreamerFCUP_Logs/icebox.txt

script:
  - mkdir build
  - cd build
  - cmake ..
  - make
  - cd ..
  - ./set_things_up.sh
  - ./download_videos.sh
  - ./run_basic_test.sh

before_script:
  - eval "${MATRIX_EVAL}"

before_install:
  ##### ZERO ICE 3.7 #####
  - sudo apt-key adv --keyserver keyserver.ubuntu.com --recv B6391CB2CFBA643D
  - sudo apt-add-repository "deb http://zeroc.com/download/Ice/3.7/ubuntu16.04 stable main"
  - sudo apt-get update
  - sudo apt-get install zeroc-ice-all-runtime zeroc-ice-all-dev
  ##### FFMPEG #####
  - sudo add-apt-repository ppa:jonathonf/ffmpeg-4 -y
  - sudo apt-get update
  - sudo apt-get install ffmpeg
  ##### TCLAP #####
  - sudo apt-get install libtclap-dev
  ##### NGINX + NGINX DEPENDENCIES + RTMP MODULE + CONF FILE #####
  - sudo apt-get install libssl-dev
  - pushd .
  - mkdir ~/build-nginx && cd ~/build-nginx
  - git clone https://github.com/sergey-dryabzhinsky/nginx-rtmp-module.git
  - export NGX_VERSION=1.15.8
  - wget https://nginx.org/download/nginx-${NGX_VERSION}.tar.gz
  - tar xzf nginx-${NGX_VERSION}.tar.gz
  - cd nginx-${NGX_VERSION}
  - ./configure --with-http_ssl_module --add-module=../nginx-rtmp-module
  - make -j 2
  - sudo make install
  - sudo cp ~/build/Zialus/SD-Video-Streaming/extras/nginx.conf /usr/local/nginx/conf/
  - sudo /usr/local/nginx/sbin/nginx
  - popd
  ##### CMAKE #####
  - export CMK_VERSION=3.13.2
  - wget https://cmake.org/files/v${CMK_VERSION%.*}/cmake-${CMK_VERSION}-Linux-x86_64.sh
  - sudo sh cmake-${CMK_VERSION}-Linux-x86_64.sh --prefix=/home/travis/.local/ --exclude-subdir
  - rm cmake-${CMK_VERSION}-Linux-x86_64.sh


matrix:
  include:

    ######## LINUX GCC ########
    - os: linux
      addons:
        apt:
          sources:
            - sourceline: 'ppa:ubuntu-toolchain-r/test'
          packages:
            - g++-4.9
      env:
        - MATRIX_EVAL="CC=gcc-4.9 && CXX=g++-4.9"
    - os: linux
      addons:
        apt:
          sources:
            - sourceline: 'ppa:ubuntu-toolchain-r/test'
          packages:
            - g++-5
      env:
        - MATRIX_EVAL="CC=gcc-5 && CXX=g++-5"
    - os: linux
      addons:
        apt:
          sources:
            - sourceline: 'ppa:ubuntu-toolchain-r/test'
          packages:
            - g++-6
      env:
        - MATRIX_EVAL="CC=gcc-6 && CXX=g++-6"
    - os: linux
      addons:
        apt:
          sources:
            - sourceline: 'ppa:ubuntu-toolchain-r/test'
          packages:
            - g++-7
      env:
        - MATRIX_EVAL="CC=gcc-7 && CXX=g++-7"
    - os: linux
      addons:
        apt:
          sources:
            - sourceline: 'ppa:ubuntu-toolchain-r/test'
          packages:
            - g++-8
      env:
        - MATRIX_EVAL="CC=gcc-8 && CXX=g++-8"

    ######## LINUX CLANG ########
    - os: linux
      addons:
        apt:
          sources:
            - sourceline: 'deb https://apt.llvm.org/xenial/ llvm-toolchain-xenial-3.9 main'
              key_url: 'https://apt.llvm.org/llvm-snapshot.gpg.key'
          packages:
            - clang-3.9
      env:
        - MATRIX_EVAL="CC=clang-3.9 && CXX=clang++-3.9"
    - os: linux
      addons:
        apt:
          sources:
            - sourceline: 'deb https://apt.llvm.org/xenial/ llvm-toolchain-xenial-4.0 main'
              key_url: 'https://apt.llvm.org/llvm-snapshot.gpg.key'
          packages:
            - clang-4.0
      env:
        - MATRIX_EVAL="CC=clang-4.0 && CXX=clang++-4.0"
    - os: linux
      addons:
        apt:
          sources:
            - sourceline: 'deb https://apt.llvm.org/xenial/ llvm-toolchain-xenial-5.0 main'
              key_url: 'https://apt.llvm.org/llvm-snapshot.gpg.key'
          packages:
            - clang-5.0
      env:
        - MATRIX_EVAL="CC=clang-5.0 && CXX=clang++-5.0"
    - os: linux
      addons:
        apt:
          sources:
            - sourceline: 'deb https://apt.llvm.org/xenial/ llvm-toolchain-xenial-6.0 main'
              key_url: 'https://apt.llvm.org/llvm-snapshot.gpg.key'
          packages:
            - clang-6.0
      env:
        - MATRIX_EVAL="CC=clang-6.0 && CXX=clang++-6.0"
    - os: linux
      addons:
        apt:
          sources:
            - sourceline: 'deb https://apt.llvm.org/xenial/ llvm-toolchain-xenial-7 main'
              key_url: 'https://apt.llvm.org/llvm-snapshot.gpg.key'
          packages:
            - clang-7
      env:
        - MATRIX_EVAL="CC=clang-7 && CXX=clang++-7"


    ######## OSX CLANG ########
    - os: osx
      osx_image: xcode10.1
      env:
        - MATRIX_EVAL="CC=clang-3.9 && CXX=clang++"
      before_install: &mac_setup
        - brew update
        - brew install ffmpeg
        - brew install tclap
        - brew install ice
        - brew tap denji/nginx
        - brew install nginx-full --with-rtmp-module
        - cp ~/build/Zialus/SD-Video-Streaming/extras/nginx.conf /usr/local/etc/nginx/
        - nginx
      install:
        - brew install llvm@3.9 && brew link --overwrite llvm@3.9 --force
    - os: osx
      osx_image: xcode10.1
      env:
        - MATRIX_EVAL="CC=clang-4.0 && CXX=clang++"
      before_install: *mac_setup
      install:
        - brew install llvm@4 && brew link --overwrite llvm@4 --force
    - os: osx
      osx_image: xcode10.1
      env:
        - MATRIX_EVAL="CC=clang-5.0 && CXX=clang++"
      before_install: *mac_setup
      install:
        - brew install llvm@5 && brew link --overwrite llvm@5 --force
    - os: osx
      osx_image: xcode10.1
      env:
        - MATRIX_EVAL="CC=clang-6.0 && CXX=clang++"
      before_install: *mac_setup
      install:
        - brew install llvm@6 && brew link --overwrite llvm@6 --force
    - os: osx
      osx_image: xcode10.1
      env:
        - MATRIX_EVAL="CC=clang-7 && CXX=clang++"
      before_install: *mac_setup
      install:
        - brew install llvm@7 && brew link --overwrite llvm@7 --force
        - export PATH="/usr/local/opt/llvm/bin:$PATH"
        - export LDFLAGS="-L/usr/local/opt/llvm/lib"
        - export CPPFLAGS="-I/usr/local/opt/llvm/include"

    ######## OSX GCC ########
    - os: osx
      osx_image: xcode10.1
      env:
        - MATRIX_EVAL="CC=gcc-4.9 && CXX=g++-4.9"
      before_install: *mac_setup
      install:
        - brew install gcc@4.9
    - os: osx
      osx_image: xcode10.1
      env:
        - MATRIX_EVAL="CC=gcc-5 && CXX=g++-5"
      before_install: *mac_setup
      install:
        - brew install gcc@5
    - os: osx
      osx_image: xcode10.1
      env:
        - MATRIX_EVAL="CC=gcc-6 && CXX=g++-6"
      before_install: *mac_setup
      install:
        - brew install gcc@6
    - os: osx
      osx_image: xcode10.1
      env:
        - MATRIX_EVAL="CC=gcc-7 && CXX=g++-7"
      before_install: *mac_setup
      install:
        - brew install gcc@7
    - os: osx
      osx_image: xcode10 # To avoid problems while linking gcc
      env:
        - MATRIX_EVAL="CC=gcc-8 && CXX=g++-8"
      before_install: *mac_setup
      install:
        - brew install gcc@8

    # SONARCLOUD
    - os: linux
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - g++-8
        sonarcloud:
          organization: "zialus-github"
          token:
            secure: "fCCPWI10lMDa6RNIRrB81iDF8/33tA3elhnNUDed5/6Su225tD2gV46Pwm4ideZvBWY9UuLnIlr5QZTOHEPUYrsWH8sblvkk5Tv0njs4cRs7XdWJrLc1gqsKo5lvu9Oe1l8BM9BzXNvp3/e2op9QSHj1cnBJeDpQuOwUG2BrLSmFU6vXi2P8V+O56bqWkx6WnrO1j+doTEHQgc5jljeF5pxi58CVBcTB/Gn1gpzKbjmcFVzvVKfoYYcpM4lFlh4R3TklLGftkfmBso6plRRbIfyKDdsmDHswqASHgOlk33Q51awJhE3H7/+OjU0fSn+/ulJNnT8l2o308rbSdYSY9D3Q4LtKjFJaZgqaoG8VCrSDjKtBNv6lOReuE0HIcFaE1Ahx6F246RJn0XPkjaLyp76VOeL2x1/D1Ist6BJ914SyukyfYuzxjgzAv/udMkw/3LZUGStVZKDHJFmX0KYI+c8Jz0ZZ49ICGPGQgyU0yjVMzJkgIoM9FI+JpYWZz1WinyJEayKo19Sz9fVBlOYe2U40m55iFsYxnrZlp5OTYVOi/aUKXH/o8YMhasNgcid9s5dIZt762GY0G9oJu2r6pgxnHViMkyAkdzCRfTRO2kqX8kL7Cd72MfVt/61DsofjwCOwKPjDT16+txPYZqb8pvOnLZJvxjZJGVMnADrPekg="
      script:
        - git fetch --unshallow
        - mkdir build && cd build
        - cmake -DCMAKE_BUILD_TYPE=Release ..
        - build-wrapper-linux-x86-64 --out-dir bw-output make clean all
        - cd ..
        - sonar-scanner
      after_script:
        - echo "Sonar Cloud"
      env:
        - SONAR_CLOUD="YUP"
        - MATRIX_EVAL="CC=gcc-8 && CXX=g++-8"


  allow_failures:
    - env:
        - MATRIX_EVAL="CC=gcc-4.9 && CXX=g++-4.9"
    - env:
        - MATRIX_EVAL="CC=gcc-5 && CXX=g++-5"
    - env:
        - MATRIX_EVAL="CC=gcc-6 && CXX=g++-6"
    - env:
        - MATRIX_EVAL="CC=gcc-7 && CXX=g++-7"
    - env:
        - MATRIX_EVAL="CC=gcc-8 && CXX=g++-8"
